import evdev
from evdev import InputDevice, categorize, ecodes, list_devices
from loguru import logger

import invaders.definitions as d


def get_key(event: evdev.InputEvent) -> int:
    """
    Given an evdev.InputEvent, returns the corresponding pressed gamepad key
    for the "cheap gamepad that looks like the SNES Gamepad"

    Args:
        event (InputEvent): Event generated by InputDevice

    Returns:
        int: Integer representing the pressed key. Check definitions.py for a full
        map of keys-numbers
    """
    if event is None:
        return None

    # Analog pad
    if event.type == ecodes.EV_ABS:
        if event.code == ecodes.ABS_X and event.value == 0:
            return d.LEFT
        elif event.code == ecodes.ABS_X and event.value == 255:
            return d.RIGHT
        elif event.code == ecodes.ABS_Y and event.value == 0:
            return d.UP
        elif event.code == ecodes.ABS_Y and event.value == 255:
            return d.DOWN
    # Button
    if event.type == ecodes.EV_KEY and event.value == d.BUTTON_UP:
        if event.code == ecodes.BTN_THUMB:
            return d.A
        elif event.code == ecodes.BTN_THUMB2:
            return d.B
        elif event.code in [ecodes.BTN_JOYSTICK, ecodes.BTN_TRIGGER]:
            return d.X
        elif event.code == ecodes.BTN_TOP:
            return d.Y
        elif event.code == ecodes.BTN_BASE4:
            return d.START
        elif event.code == ecodes.BTN_BASE3:
            return d.SELECT
        elif event.code == ecodes.BTN_PINKIE:
            return d.R1
        elif event.code == ecodes.BTN_TOP2:
            return d.L1

    return None


def get_user_input(device: evdev.InputDevice) -> int:
    """
    Given a device, returns the key (or gamepad buttom) associated
    to the next event in the queue.

    Args:
        device (InputDevice): evdev input device

    Returns:
        int: Number represseing a buttom/key from the gamepad
    """
    return get_key(device.read_one())


def get_input_device() -> evdev.InputDevice:
    """
    Returns an 'evdev.InputDevice' representing a GamePad. Asks the user for input if there is more than one gamepad
    """
    selection = None

    available_devices = list_devices()
    logger.debug(available_devices)

    if len(available_devices) == 0:
        logger.error("No gamepads detected, exiting.")
        exit(1)
    elif len(available_devices) > 1:

        for i, device in enumerate(available_devices):
            print(f"[{i}] - {device}")
        done = False
        while not done:
            try:
                selection = input(f"Select a device [0-{len(available_devices) - 1}]: ")
                selection = int(selection)
                if selection >= 0 and selection < len(available_devices):
                    done = True
            except ValueError:
                logger.error(
                    f"The input '{selection}' does not look like a number between 0 and {len(available_devices) -1}. Try again"
                )

    elif len(available_devices) == 1:
        selection = 0

    return InputDevice(available_devices[selection])
